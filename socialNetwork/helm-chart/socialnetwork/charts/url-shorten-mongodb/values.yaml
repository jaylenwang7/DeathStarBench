name: url-shorten-mongodb

ports:
  - port: 27017
    targetPort: 27017
  - port: 8080
    targetPort: 8080
    name: mgmt

container:
  args: 
  - --config
  - /social-network-microservices/config/mongod.conf
  image:
    registry: docker.io
    repository: library
    name: mongo
    tag: 4.4.6
  name: url-shorten-mongodb
  ports: 
    - containerPort: 27017
    - containerPort: 8080
      name: mgmt
  lifecycle:
    preStop:
      enabled: true
      exec:
        command: 
        - "sh"
        - "-c"
        - |
          # Disable new connections
          mongo admin --eval 'db.adminCommand({ "setParameter": 1, "maxConnections": 1 })'
          # Wait briefly for existing operations to complete
          sleep 2
          # Get current operations and wait if there are any in progress
          while [ $(mongo admin --quiet --eval 'db.currentOp({"active": true, "microsecs_running": {"$gt": 0}}).inprog.length') -gt 0 ]; do
            echo "Waiting for operations to complete..."
            sleep 0.1
          done
          # Shutdown the server
          mongo admin --eval 'db.shutdownServer()'
        # - |
        #   MGMT_PORT=$(cat /config/service-config.json | jq -r '."url-shorten-service"."mgmt_port"')
        #   curl -X POST http://localhost:${MGMT_PORT}/prepare-shutdown
        #   # Wait for probe to remove the pod from the service
        #   sleep 1.5
        #   TIMEOUT=10
        #   INTERVAL=0.1
        #   ELAPSED=0
        #   while [ $ELAPSED -lt $TIMEOUT ]; do
        #     COUNT=$(curl -s http://localhost:${MGMT_PORT}/active-mongo-ops | jq '.count')
        #     if [ "$COUNT" = "0" ]; then
        #       exit 0
        #     fi
        #     sleep $INTERVAL
        #     ELAPSED=$((ELAPSED + INTERVAL))
        #   done

configMaps:
  - name: mongod.conf
    mountPath: /social-network-microservices/config/mongod.conf
    value: mongod
